---
# terraform needs a directory to work out of, this step creates that directory.
- name: setting terraform project
  file:
    path: "roles/proxy/haproxy"
    state: directory

# added a check to verify if a file exist before downloading it in the next step.
- name: checking current terraform from s3
  aws_s3:
    bucket: "{{ bucket }}"
    prefix: "example/haproxy/main.tf"
    mode: list
  register: terraform_s3

# downloading the file if it does exist, otherwise skipping this step.
- name: downloading current terraform from s3
  aws_s3:
    bucket: "{{ bucket }}"
    object: "/example/haproxy/main.tf"
    dest: "roles/proxy/haproxy/main.tf"
    mode: get
  when: (terraform_s3.s3_keys | length>0 )

# creating the terraform main.tf from a template and registering if there is any
# change in the file.
- name: setting terraform files
  template:
    src: main.tf.j2
    dest: "roles/proxy/haproxy/main.tf"
  register: terraform_template

# running an apply on terraform file if there was a change, otherwise skipping.
- name: applying terraform
  terraform:
    project_path: "roles/proxy/haproxy/"
    force_init: yes
    state: present
  register: terraform_apply
  when: terraform_template.changed

# displaying the output of the terraform apply for logging.
- name: displaying terraform output
  debug:
    msg: "{{ terraform_apply.stdout_lines }}"
  when: terraform_template.changed

# uploading the new terraform file if there was a change, otherwise skipping.
- name: uploading terraform to s3 on change
  aws_s3:
    bucket: "{{ bucket }}"
    object: "/example/haproxy/main.tf"
    src: "roles/proxy/haproxy/main.tf"
    mode: put
  when: terraform_template.changed

# if there was no change in the terraform file run terraform init to be able to
# run terraform output in the next step.
- name: running terraform init
  command: terraform init
  args:
    chdir: "roles/proxy/haproxy/"
  when: terraform_template.changed == false

# registering the target group arn of the haproxy that was set in terraform.
# this will be used in the ecs task to add the container to the target group.
- name: registering terraform target group arn output
  command: terraform output
  args:
    chdir: "roles/proxy/haproxy/"
  register: terraform_output
